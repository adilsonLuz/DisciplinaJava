
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Adilson
 */
public class FramePessoaFisica extends javax.swing.JFrame {
    //Cria um objeto do tipo cliente sem nenhum dado atribuido
    Cliente cliente = new Cliente();
    //Cria um objeto formatador para data de nascimento
    SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
    /**
     * Creates new form Cadastro
     */
    public FramePessoaFisica() {
        initComponents();
        setLocation(300,150);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        GrupoButonSexo = new javax.swing.ButtonGroup();
        painelDadosClientes = new javax.swing.JPanel();
        lbNome = new javax.swing.JLabel();
        tfNome = new javax.swing.JTextField();
        lbEndereço = new javax.swing.JLabel();
        tfEndereço = new javax.swing.JTextField();
        lbNascimento = new javax.swing.JLabel();
        llbCidade = new javax.swing.JLabel();
        tfCidade = new javax.swing.JTextField();
        lbEstado = new javax.swing.JLabel();
        cbEstado = new javax.swing.JComboBox<>();
        lbSexo = new javax.swing.JLabel();
        rbMasculino = new javax.swing.JRadioButton();
        rbFeminino = new javax.swing.JRadioButton();
        lbNumeroEndereço = new javax.swing.JLabel();
        tfNumeroEndereço = new javax.swing.JTextField();
        ftfNascimento = new javax.swing.JFormattedTextField();
        lbCPF = new javax.swing.JLabel();
        ftfCPF = new javax.swing.JFormattedTextField();
        lbRenda = new javax.swing.JLabel();
        tfRenda = new javax.swing.JTextField();
        painelHobie = new javax.swing.JPanel();
        chkFutebol = new javax.swing.JCheckBox();
        chkLeitura = new javax.swing.JCheckBox();
        chkPescaria = new javax.swing.JCheckBox();
        chkDança = new javax.swing.JCheckBox();
        chkVideoGame = new javax.swing.JCheckBox();
        chkCorrer = new javax.swing.JCheckBox();
        chkCozinhar = new javax.swing.JCheckBox();
        chkMúsica = new javax.swing.JCheckBox();
        painelBotões = new javax.swing.JPanel();
        btSalvar = new javax.swing.JButton();
        btConsultar = new javax.swing.JButton();
        btExcluir = new javax.swing.JButton();
        btVoltar = new javax.swing.JButton();
        btListarClientes = new javax.swing.JButton();
        btEditar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        painelDadosClientes.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Dados do Cliente", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        lbNome.setText("Nome");

        lbEndereço.setText("Endereço");

        lbNascimento.setText("Nascimento");

        llbCidade.setText("Cidade");

        lbEstado.setText("Estado");

        cbEstado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "AC", "AL", "AP", "AM", "BA", "CE", "DF", "ES", "GO", "MA", "MT", "MS", "MG", "PA", "PB", "PR", "PE", "PI", "RJ", "RN", "RS", "RO", "RR", "SC", "SP", "SE", "TO" }));
        cbEstado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbEstadoActionPerformed(evt);
            }
        });

        lbSexo.setText("Sexo");

        GrupoButonSexo.add(rbMasculino);
        rbMasculino.setText("Masculino");

        GrupoButonSexo.add(rbFeminino);
        rbFeminino.setText("Feminino");

        lbNumeroEndereço.setText("Nº");

        try {
            ftfNascimento.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        ftfNascimento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ftfNascimentoActionPerformed(evt);
            }
        });

        lbCPF.setText("CPF");

        try {
            ftfCPF.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        ftfCPF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ftfCPFActionPerformed(evt);
            }
        });

        lbRenda.setText("Renda");

        javax.swing.GroupLayout painelDadosClientesLayout = new javax.swing.GroupLayout(painelDadosClientes);
        painelDadosClientes.setLayout(painelDadosClientesLayout);
        painelDadosClientesLayout.setHorizontalGroup(
            painelDadosClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelDadosClientesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelDadosClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelDadosClientesLayout.createSequentialGroup()
                        .addComponent(llbCidade)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfCidade)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lbEstado)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lbCPF)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ftfCPF, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(painelDadosClientesLayout.createSequentialGroup()
                        .addGroup(painelDadosClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(painelDadosClientesLayout.createSequentialGroup()
                                .addComponent(lbEndereço)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tfEndereço, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lbNumeroEndereço)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tfNumeroEndereço, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(painelDadosClientesLayout.createSequentialGroup()
                                .addComponent(lbSexo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rbMasculino)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rbFeminino)
                                .addGap(26, 26, 26)
                                .addComponent(lbRenda)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tfRenda, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(painelDadosClientesLayout.createSequentialGroup()
                                .addComponent(lbNome)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tfNome, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(lbNascimento)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ftfNascimento, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(54, 54, 54))
        );
        painelDadosClientesLayout.setVerticalGroup(
            painelDadosClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelDadosClientesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelDadosClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbNome)
                    .addComponent(tfNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbNascimento)
                    .addComponent(ftfNascimento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelDadosClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbEndereço)
                    .addComponent(tfEndereço, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbNumeroEndereço)
                    .addComponent(tfNumeroEndereço, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addGroup(painelDadosClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(llbCidade)
                    .addComponent(tfCidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbEstado)
                    .addComponent(cbEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbCPF)
                    .addComponent(ftfCPF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelDadosClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbSexo)
                    .addComponent(rbMasculino)
                    .addComponent(rbFeminino)
                    .addComponent(lbRenda)
                    .addComponent(tfRenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        painelHobie.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Hobies", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        chkFutebol.setText("Futebol");

        chkLeitura.setText("Leitura");

        chkPescaria.setText("Pescaria");

        chkDança.setText("Dança");

        chkVideoGame.setText("Video-Game");

        chkCorrer.setText("Correr");

        chkCozinhar.setText("Cozinhar");

        chkMúsica.setText("Música");

        javax.swing.GroupLayout painelHobieLayout = new javax.swing.GroupLayout(painelHobie);
        painelHobie.setLayout(painelHobieLayout);
        painelHobieLayout.setHorizontalGroup(
            painelHobieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelHobieLayout.createSequentialGroup()
                .addGroup(painelHobieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chkLeitura)
                    .addComponent(chkVideoGame))
                .addGap(49, 49, 49)
                .addGroup(painelHobieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chkFutebol)
                    .addComponent(chkCorrer))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 75, Short.MAX_VALUE)
                .addGroup(painelHobieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chkPescaria)
                    .addComponent(chkCozinhar))
                .addGap(53, 53, 53)
                .addGroup(painelHobieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chkDança)
                    .addComponent(chkMúsica))
                .addGap(42, 42, 42))
        );
        painelHobieLayout.setVerticalGroup(
            painelHobieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelHobieLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(painelHobieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkFutebol)
                    .addComponent(chkLeitura)
                    .addComponent(chkPescaria)
                    .addComponent(chkDança))
                .addGap(18, 18, 18)
                .addGroup(painelHobieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkVideoGame)
                    .addComponent(chkCorrer)
                    .addComponent(chkCozinhar)
                    .addComponent(chkMúsica)))
        );

        painelBotões.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btSalvar.setText("Salvar");
        btSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSalvarActionPerformed(evt);
            }
        });

        btConsultar.setText("Consultar");
        btConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btConsultarActionPerformed(evt);
            }
        });

        btExcluir.setText("Excluir");
        btExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btExcluirActionPerformed(evt);
            }
        });

        btVoltar.setText("Voltar");
        btVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btVoltarActionPerformed(evt);
            }
        });

        btListarClientes.setText("Listar");
        btListarClientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btListarClientesActionPerformed(evt);
            }
        });

        btEditar.setText("Editar");
        btEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEditarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout painelBotõesLayout = new javax.swing.GroupLayout(painelBotões);
        painelBotões.setLayout(painelBotõesLayout);
        painelBotõesLayout.setHorizontalGroup(
            painelBotõesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelBotõesLayout.createSequentialGroup()
                .addComponent(btSalvar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btConsultar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btEditar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btExcluir)
                .addGap(18, 18, 18)
                .addComponent(btListarClientes)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btVoltar)
                .addContainerGap())
        );
        painelBotõesLayout.setVerticalGroup(
            painelBotõesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelBotõesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelBotõesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btSalvar)
                    .addComponent(btConsultar)
                    .addComponent(btExcluir)
                    .addComponent(btVoltar)
                    .addComponent(btEditar)
                    .addComponent(btListarClientes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(painelDadosClientes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(painelHobie, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(painelBotões, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(painelDadosClientes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(painelHobie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(painelBotões, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void cbEstadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbEstadoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbEstadoActionPerformed

    
    private void btSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSalvarActionPerformed
        // TODO add your handling code here:
        cliente.setNome(tfNome.getText());
        try {
            cliente.setNascimento(formato.parse(ftfNascimento.getText()));
        } catch (ParseException ex) {
            Logger.getLogger(FramePessoaFisica.class.getName()).log(Level.SEVERE, null, ex);
        }
        cliente.setEndereço(tfEndereço.getText());
        cliente.setNumeroEndereço(Integer.parseInt(tfNumeroEndereço.getText()));
        cliente.setCidade(tfCidade.getText());
        cliente.setUf((String) cbEstado.getSelectedItem());
        cliente.setCpf(ftfCPF.getText());
        cliente.setSexo(rbMasculino.isSelected()?"Masculino":"Feminino");
        cliente.setRenda(Float.parseFloat(tfRenda.getText()));
        cliente.setLeitura(chkLeitura.isSelected());
        cliente.setFutebol(chkFutebol.isSelected());
        cliente.setPescaria(chkPescaria.isSelected());
        cliente.setDanca(chkDança.isSelected());
        cliente.setVideoGame(chkVideoGame.isSelected());
        cliente.setCorrida(chkCorrer.isSelected());
        cliente.setCozinhar(chkCozinhar.isSelected());
        cliente.setMusica(chkMúsica.isSelected());
                
        //Invoca o metodo que limpa todos os campos do frame
        limparCampos();
        
         
        try {
            salvarClienteBD(cliente);
        } catch (SQLException ex) {
            Logger.getLogger(FramePessoaFisica.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(FramePessoaFisica.class.getName()).log(Level.SEVERE, null, ex);
        }
        
                
    }//GEN-LAST:event_btSalvarActionPerformed
    
    
    //Metodo para listrar todo o conteudo da taberla cliente
    public void listarClientes() throws ClassNotFoundException, SQLException{
        Connection conexao = pegarConexao();
        Statement stmt;
        ResultSet rs; //objeto que ira receber um resultado de um SELECT na tabala
        
        stmt = conexao.createStatement();
        
        String sql;
        sql = "Select * from clientes";
        rs = stmt.executeQuery(sql);
        
        while(rs.next()){
            System.out.println("Cliente: "+ rs.getString(1));
            System.out.println("Nascimento: "+ rs.getString(2));
            System.out.println("Endereço: "+ rs.getString(3)+" Nº "+ rs.getString(4));
            System.out.println("Cidade: "+ rs.getString(5)+" - UF: "+ rs.getString(6));
            System.out.println("CPF: "+ rs.getString(7));
            System.out.println("Sexo: "+ rs.getString("sexo"));
            System.out.println("Renda: R$ "+ rs.getString(9));
            System.out.println("Hobies");
            System.out.println("Leitura: " + (rs.getBoolean(10)?"sim":"não"));
            System.out.println("Futebol: " + (rs.getBoolean("futebol")?"sim":"não"));
            System.out.println("Pescaria: " + (rs.getBoolean(12)?"sim":"não"));
            System.out.println("Dança: " + (rs.getBoolean(13)?"sim":"não"));
            System.out.println("Video Game: " + (rs.getBoolean(14)?"sim":"não"));
            System.out.println("Corrida: " + (rs.getBoolean(15)?"sim":"não"));
            System.out.println("Cozinha: " + (rs.getBoolean("cozinhar")?"Sim":"Não"));
            System.out.println("Musíca: " + (rs.getBoolean(17)?"Sim":"Não"));
            System.out.println("_______________________________________\n");
            
        }
    }
    
    //Método para salvar (gravar) os dados do cliente no BD
    private void salvarClienteBD(Cliente cli) throws SQLException, ClassNotFoundException {
        Connection conexao = pegarConexao();
        Statement stmt;
        stmt = conexao.createStatement();// executa um comeando SQL
        
        String nome = cli.getNome();
        String nasc = formato.format(cli.getNascimento());
        String end = cli.getEndereço();
        int numEndereco = cli.getNumeroEndereço();
        String cidade = cli.getCidade();
        String estado = cli.getUf();
        String cpf = cli.getCpf();
        String sexo = cli.getSexo();
        float renda = cli.getRenda();
        boolean leitura = cli.isLeitura();
        boolean futebol = cli.isFutebol();
        boolean pescaria = cli.isPescaria();
        boolean dança = cli.isDanca();
        boolean videoGame = cli.isVideoGame();
        boolean correr = cli.isCorrida();
        boolean cozinhar = cli.isCozinhar();
        boolean musica = cli.isMusica();
        
        String sql = "INSERT INTO clientes (nome, nascimento, endereco,"
                +"numEnd, cidade, estado, cpf, sexo, renda, leitura,"
                +"futebol, pescaria, danca, videogame, correr, cozinhar,"
                +"musica) VALUES ('"+nome+"','"+nasc+"','"+end+"',"+numEndereco
                +",'"+cidade+"','"+estado+"','"+cpf+"','"+sexo+"',"+renda+","+leitura
                +","+futebol+","+pescaria+","+dança+","+videoGame+","+correr+","+cozinhar
                +","+musica+")";
        
        stmt.executeUpdate(sql);
                
       JOptionPane.showMessageDialog(null,"Dados incluido no banco com sucesso!!!");
       limparCampos();
    }
    
       
    private void btVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btVoltarActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_btVoltarActionPerformed

    
    private void btListarClientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btListarClientesActionPerformed
        
        try {
            listarClientes();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(FramePessoaFisica.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(FramePessoaFisica.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btListarClientesActionPerformed

    
    private void btConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btConsultarActionPerformed
        
        try {
            buscarClienteNome();
            
            
            /*tfNome.setText(cliente.getNome());
            tfNome.setEnabled(false);
            ftfNascimento.setText(formato.format(cliente.getNascimento()));
            ftfNascimento.setEditable(false);
            tfEndereço.setText(cliente.getEndereço());
            tfEndereço.setEditable(false);
            tfNumeroEndereço.setText(String.valueOf(cliente.getNumeroEndereço()));
            tfNumeroEndereço.setEditable(false);
            tfCidade.setText(cliente.getCidade());
            tfCidade.setEditable(false);
            cbEstado.setSelectedItem(cliente.getUf());
            cbEstado.setEditable(false);
            ftfCPF.setText(cliente.getCpf());
            ftfCPF.setEditable(false);
            rbMasculino.setSelected("Masculino".contains(cliente.getSexo()));
            rbMasculino.setEnabled(false);
            rbFeminino.setSelected("Feminino".contains(cliente.getSexo()));
            rbFeminino.setEnabled(false);
            tfRenda.setText(String.valueOf(cliente.getRenda()));
            tfRenda.setEditable(false);
            chkLeitura.setSelected(cliente.isLeitura());
            chkLeitura.setEnabled(false);
            chkFutebol.setSelected(cliente.isFutebol());
            chkFutebol.setEnabled(false);
            chkPescaria.setSelected(cliente.isPescaria());
            chkPescaria.setEnabled(false);
            chkDança.setSelected(cliente.isDanca());
            chkDança.setEnabled(false);
            chkVideoGame.setSelected(cliente.isVideoGame());
            chkVideoGame.setEnabled(false);
            chkCozinhar.setSelected(cliente.isCozinhar());
            chkCozinhar.setEnabled(false);
            chkCorrer.setSelected(cliente.isCorrida());
            chkCorrer.setEnabled(false);
            chkMúsica.setSelected(cliente.isMusica());
            chkMúsica.setEnabled(false);*/
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(FramePessoaFisica.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(FramePessoaFisica.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btConsultarActionPerformed

    public void buscarClienteNome() throws ClassNotFoundException, SQLException{
        
        Connection conexao;
        conexao = pegarConexao();
        Statement stmt;
        ResultSet rs; //objeto que ira receber um resultado de um SELECT na tabela
        
        stmt = conexao.createStatement();
        
        String sql;
        sql = "Select * from clientes Where (nome Like Trim('%"+tfNome.getText()+"%'))";
        rs = stmt.executeQuery(sql);
        rs.next();
        tfNome.setText(rs.getString(1));
        ftfNascimento.setText(rs.getString("nascimento"));
        tfEndereço.setText(rs.getString("endereco"));
        tfNumeroEndereço.setText(String.valueOf(rs.getInt(4)));
        tfCidade.setText(rs.getString(5));
        cbEstado.setSelectedItem(rs.getString(6));
        ftfCPF.setText(rs.getString(7));
        rbMasculino.setSelected(rs.getString(8).equals("Masculino"));
        rbFeminino.setSelected(rs.getString(8).equals("Feminino"));
        tfRenda.setText(String.valueOf(rs.getFloat(9)));
        chkLeitura.setSelected(rs.getBoolean(10));
        chkFutebol.setSelected(rs.getBoolean(11));
        chkPescaria.setSelected(rs.getBoolean(12));
        chkDança.setSelected(rs.getBoolean(13));
        chkVideoGame.setSelected(rs.getBoolean(14));
        chkCorrer.setSelected(rs.getBoolean(15));
        chkCozinhar.setSelected(rs.getBoolean(16));
        chkMúsica.setSelected(rs.getBoolean(17));
    }
        
    private void btExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExcluirActionPerformed
       
        try {
            excluirCliente();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(FramePessoaFisica.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(FramePessoaFisica.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        /*JOptionPane.showMessageDialog(null,"Tem Certeza que deseja excluir"
                + "este cliente de memória?", "Exclusão de Cliente", -1);
        limparCampos();
        cliente = null;
        JOptionPane.showMessageDialog(null,"Cliente excluido com sucesso!!!");*/
    }//GEN-LAST:event_btExcluirActionPerformed

    public void excluirCliente() throws ClassNotFoundException, SQLException{
        
        JOptionPane.showMessageDialog(null,"Tem Certeza que deseja excluir "
                + "permanentemente este cliente?", "Exclusão de Cliente", 2);
        
        Connection conexao;
        conexao = pegarConexao();
        Statement stmt;
                
        stmt = conexao.createStatement();
        
        String sql;
        sql = "Delete from clientes Where (nome = '"+tfNome.getText()+"')";
        stmt.executeUpdate(sql);
       
        limparCampos();
        
        JOptionPane.showMessageDialog(null,"CLIENTE EXCLUÍDO COM SUCESSO!!!"
                , "confirmação de Exclusão", 0);
        
    }
    
    private void btEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEditarActionPerformed
    
        
    }//GEN-LAST:event_btEditarActionPerformed

    private void ftfNascimentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ftfNascimentoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ftfNascimentoActionPerformed

    private void ftfCPFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ftfCPFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ftfCPFActionPerformed

    //Método para limpar os dados dos campos do frame
    public void limparCampos(){
        tfNome.setText("");
        ftfNascimento.setText("");
        tfEndereço.setText("");
        tfNumeroEndereço.setText("");
        tfCidade.setText("");
        cbEstado.setSelectedIndex(-1);
        ftfCPF.setText("");
        GrupoButonSexo.clearSelection();
        tfRenda.setText("");
        chkLeitura.setSelected(false);
        chkFutebol.setSelected(false);
        chkPescaria.setSelected(false);
        chkDança.setSelected(false);
        chkVideoGame.setSelected(false);
        chkCozinhar.setSelected(false);
        chkCorrer.setSelected(false);
        chkMúsica.setSelected(false);
    }
    
    
    //Método para estabelecer conexão com o BD Derby
    
    public Connection pegarConexao() throws ClassNotFoundException, SQLException{
        String driveJDBC = "org.apache.derby.jdbc.Driver42";
        String url = "jdbc:derby://localhost:1527/PrimeiroBD";
        String usuario = "fatec";
        String senha = "spb";
        
        Connection conexao;
        Class.forName(driveJDBC);
        conexao = (Connection) DriverManager.getConnection(url, usuario, senha);
        return conexao;
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FramePessoaFisica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup GrupoButonSexo;
    private javax.swing.JButton btConsultar;
    private javax.swing.JButton btEditar;
    private javax.swing.JButton btExcluir;
    private javax.swing.JButton btListarClientes;
    private javax.swing.JButton btSalvar;
    private javax.swing.JButton btVoltar;
    private javax.swing.JComboBox<String> cbEstado;
    private javax.swing.JCheckBox chkCorrer;
    private javax.swing.JCheckBox chkCozinhar;
    private javax.swing.JCheckBox chkDança;
    private javax.swing.JCheckBox chkFutebol;
    private javax.swing.JCheckBox chkLeitura;
    private javax.swing.JCheckBox chkMúsica;
    private javax.swing.JCheckBox chkPescaria;
    private javax.swing.JCheckBox chkVideoGame;
    private javax.swing.JFormattedTextField ftfCPF;
    private javax.swing.JFormattedTextField ftfNascimento;
    private javax.swing.JLabel lbCPF;
    private javax.swing.JLabel lbEndereço;
    private javax.swing.JLabel lbEstado;
    private javax.swing.JLabel lbNascimento;
    private javax.swing.JLabel lbNome;
    private javax.swing.JLabel lbNumeroEndereço;
    private javax.swing.JLabel lbRenda;
    private javax.swing.JLabel lbSexo;
    private javax.swing.JLabel llbCidade;
    private javax.swing.JPanel painelBotões;
    private javax.swing.JPanel painelDadosClientes;
    private javax.swing.JPanel painelHobie;
    private javax.swing.JRadioButton rbFeminino;
    private javax.swing.JRadioButton rbMasculino;
    private javax.swing.JTextField tfCidade;
    private javax.swing.JTextField tfEndereço;
    private javax.swing.JTextField tfNome;
    private javax.swing.JTextField tfNumeroEndereço;
    private javax.swing.JTextField tfRenda;
    // End of variables declaration//GEN-END:variables
}


