
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Adilson
 */
public class FramePet extends javax.swing.JFrame {
        Pet pet = new Pet();
        SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyy");
        
    /**
     * Creates new form FramePet
     */
    public FramePet() {
        initComponents();
        setSize(862,530);
        setIcon();
        setLocation(450,50);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        gbEspeciePet = new javax.swing.ButtonGroup();
        gbSexo = new javax.swing.ButtonGroup();
        gbCastrado = new javax.swing.ButtonGroup();
        panelPet = new javax.swing.JPanel();
        lbtituloFrame = new javax.swing.JLabel();
        lbNomeAnimal = new javax.swing.JLabel();
        tfNomePet = new javax.swing.JTextField();
        btBuscarPet = new javax.swing.JButton();
        lbIdade = new javax.swing.JLabel();
        lbAno = new javax.swing.JLabel();
        tfIdadeAnoPet = new javax.swing.JTextField();
        lbMeses = new javax.swing.JLabel();
        tfIdadeMesPet = new javax.swing.JTextField();
        lbNascimentoPet = new javax.swing.JLabel();
        ftfNascimentoPet = new javax.swing.JFormattedTextField();
        jLabel1 = new javax.swing.JLabel();
        rbCanino = new javax.swing.JRadioButton();
        rbFelino = new javax.swing.JRadioButton();
        lbRacaPet = new javax.swing.JLabel();
        tfRacaPet = new javax.swing.JTextField();
        lbCorPet = new javax.swing.JLabel();
        tfCorPet = new javax.swing.JTextField();
        lbPeso = new javax.swing.JLabel();
        tfPeso = new javax.swing.JTextField();
        lbSexopet = new javax.swing.JLabel();
        rbMacho = new javax.swing.JRadioButton();
        rbFemea = new javax.swing.JRadioButton();
        lbCastrado = new javax.swing.JLabel();
        rbCastradoSim = new javax.swing.JRadioButton();
        rbCastradoNao = new javax.swing.JRadioButton();
        lbTituloVacina = new javax.swing.JLabel();
        chk1V10 = new javax.swing.JCheckBox();
        chk2V10 = new javax.swing.JCheckBox();
        chk3V10 = new javax.swing.JCheckBox();
        chk1Giardia = new javax.swing.JCheckBox();
        chk2Giardia = new javax.swing.JCheckBox();
        chkGripe = new javax.swing.JCheckBox();
        chkRaiva = new javax.swing.JCheckBox();
        chk1Vermifungo = new javax.swing.JCheckBox();
        chk2Vermifungo = new javax.swing.JCheckBox();
        lbSalvarPet = new javax.swing.JLabel();
        btSalvarPet = new javax.swing.JButton();
        lbEditarPet = new javax.swing.JLabel();
        btEditarPet = new javax.swing.JButton();
        lbExcluirPet = new javax.swing.JLabel();
        btExcluirPet = new javax.swing.JButton();
        lbVoltar = new javax.swing.JLabel();
        btVoltarPet = new javax.swing.JButton();
        lbFotoFundoCadastroPet = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro Pet");

        panelPet.setLayout(null);

        lbtituloFrame.setFont(new java.awt.Font("Consolas", 2, 48)); // NOI18N
        lbtituloFrame.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbtituloFrame.setText("CADASTRO PET");
        panelPet.add(lbtituloFrame);
        lbtituloFrame.setBounds(0, 4, 860, 40);

        lbNomeAnimal.setText("Nome Pet");
        panelPet.add(lbNomeAnimal);
        lbNomeAnimal.setBounds(40, 50, 80, 14);
        panelPet.add(tfNomePet);
        tfNomePet.setBounds(40, 70, 190, 27);

        btBuscarPet.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lupaIcon.png"))); // NOI18N
        btBuscarPet.setContentAreaFilled(false);
        btBuscarPet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btBuscarPetActionPerformed(evt);
            }
        });
        panelPet.add(btBuscarPet);
        btBuscarPet.setBounds(240, 70, 27, 27);

        lbIdade.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbIdade.setText("Idade");
        panelPet.add(lbIdade);
        lbIdade.setBounds(320, 50, 60, 14);

        lbAno.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbAno.setText("Anos");
        panelPet.add(lbAno);
        lbAno.setBounds(297, 70, 40, 27);

        tfIdadeAnoPet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfIdadeAnoPetActionPerformed(evt);
            }
        });
        panelPet.add(tfIdadeAnoPet);
        tfIdadeAnoPet.setBounds(340, 70, 30, 27);

        lbMeses.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbMeses.setText("Meses");
        panelPet.add(lbMeses);
        lbMeses.setBounds(370, 70, 40, 27);
        panelPet.add(tfIdadeMesPet);
        tfIdadeMesPet.setBounds(410, 70, 30, 27);

        lbNascimentoPet.setText("Nascimento");
        panelPet.add(lbNascimentoPet);
        lbNascimentoPet.setBounds(470, 50, 110, 14);

        try {
            ftfNascimentoPet.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        panelPet.add(ftfNascimentoPet);
        ftfNascimentoPet.setBounds(470, 70, 120, 27);

        jLabel1.setText("Espécie");
        panelPet.add(jLabel1);
        jLabel1.setBounds(720, 50, 70, 14);

        gbEspeciePet.add(rbCanino);
        rbCanino.setText("Canino");
        panelPet.add(rbCanino);
        rbCanino.setBounds(650, 70, 90, 23);

        gbEspeciePet.add(rbFelino);
        rbFelino.setText("Felino");
        panelPet.add(rbFelino);
        rbFelino.setBounds(760, 70, 60, 23);

        lbRacaPet.setText("Raça");
        panelPet.add(lbRacaPet);
        lbRacaPet.setBounds(40, 120, 70, 14);
        panelPet.add(tfRacaPet);
        tfRacaPet.setBounds(40, 140, 150, 27);

        lbCorPet.setText("Cor");
        panelPet.add(lbCorPet);
        lbCorPet.setBounds(230, 120, 50, 14);
        panelPet.add(tfCorPet);
        tfCorPet.setBounds(230, 140, 110, 27);

        lbPeso.setText("Peso");
        panelPet.add(lbPeso);
        lbPeso.setBounds(380, 120, 60, 14);
        panelPet.add(tfPeso);
        tfPeso.setBounds(380, 140, 80, 27);

        lbSexopet.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbSexopet.setText("Sexo");
        panelPet.add(lbSexopet);
        lbSexopet.setBounds(540, 120, 60, 14);

        gbSexo.add(rbMacho);
        rbMacho.setText("Macho");
        panelPet.add(rbMacho);
        rbMacho.setBounds(500, 140, 80, 23);

        gbSexo.add(rbFemea);
        rbFemea.setText("Femêa");
        panelPet.add(rbFemea);
        rbFemea.setBounds(590, 140, 80, 23);

        lbCastrado.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbCastrado.setText("Castrado");
        panelPet.add(lbCastrado);
        lbCastrado.setBounds(710, 120, 80, 14);

        gbCastrado.add(rbCastradoSim);
        rbCastradoSim.setText("Sim");
        panelPet.add(rbCastradoSim);
        rbCastradoSim.setBounds(700, 140, 50, 23);

        gbCastrado.add(rbCastradoNao);
        rbCastradoNao.setText("Não");
        panelPet.add(rbCastradoNao);
        rbCastradoNao.setBounds(760, 140, 50, 23);

        lbTituloVacina.setFont(new java.awt.Font("Consolas", 2, 24)); // NOI18N
        lbTituloVacina.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbTituloVacina.setText("VACINAS E MEDICAMENTOS");
        panelPet.add(lbTituloVacina);
        lbTituloVacina.setBounds(0, 200, 860, 30);

        chk1V10.setText("V10 - 1ª dose");
        panelPet.add(chk1V10);
        chk1V10.setBounds(60, 290, 150, 23);

        chk2V10.setText("V10 - 2ª Dose");
        panelPet.add(chk2V10);
        chk2V10.setBounds(380, 290, 150, 23);

        chk3V10.setText("V10 - 3ª Dose");
        panelPet.add(chk3V10);
        chk3V10.setBounds(650, 290, 150, 23);

        chk1Giardia.setText("1ª Giárdia");
        panelPet.add(chk1Giardia);
        chk1Giardia.setBounds(60, 330, 150, 23);

        chk2Giardia.setText("2ª Giárdia");
        panelPet.add(chk2Giardia);
        chk2Giardia.setBounds(380, 330, 150, 23);

        chkGripe.setText("Gripe");
        panelPet.add(chkGripe);
        chkGripe.setBounds(650, 330, 150, 23);

        chkRaiva.setText("Raiva");
        panelPet.add(chkRaiva);
        chkRaiva.setBounds(650, 250, 150, 23);

        chk1Vermifungo.setText("1º Vermifungo");
        panelPet.add(chk1Vermifungo);
        chk1Vermifungo.setBounds(60, 250, 150, 23);

        chk2Vermifungo.setText("2º Vermifungo");
        panelPet.add(chk2Vermifungo);
        chk2Vermifungo.setBounds(380, 250, 150, 23);

        lbSalvarPet.setText("Salvar");
        panelPet.add(lbSalvarPet);
        lbSalvarPet.setBounds(84, 390, 50, 14);

        btSalvarPet.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconSave.png"))); // NOI18N
        btSalvarPet.setContentAreaFilled(false);
        btSalvarPet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSalvarPetActionPerformed(evt);
            }
        });
        panelPet.add(btSalvarPet);
        btSalvarPet.setBounds(80, 415, 40, 40);

        lbEditarPet.setText("Editar");
        panelPet.add(lbEditarPet);
        lbEditarPet.setBounds(200, 390, 50, 14);

        btEditarPet.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconEdit.png"))); // NOI18N
        btEditarPet.setContentAreaFilled(false);
        btEditarPet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEditarPetActionPerformed(evt);
            }
        });
        panelPet.add(btEditarPet);
        btEditarPet.setBounds(200, 415, 40, 40);

        lbExcluirPet.setText("Excluir");
        panelPet.add(lbExcluirPet);
        lbExcluirPet.setBounds(321, 390, 40, 14);

        btExcluirPet.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconDel.png"))); // NOI18N
        btExcluirPet.setContentAreaFilled(false);
        btExcluirPet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btExcluirPetActionPerformed(evt);
            }
        });
        panelPet.add(btExcluirPet);
        btExcluirPet.setBounds(320, 415, 40, 40);

        lbVoltar.setText("Voltar");
        panelPet.add(lbVoltar);
        lbVoltar.setBounds(684, 390, 40, 14);

        btVoltarPet.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconVoltar.png"))); // NOI18N
        btVoltarPet.setContentAreaFilled(false);
        btVoltarPet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btVoltarPetActionPerformed(evt);
            }
        });
        panelPet.add(btVoltarPet);
        btVoltarPet.setBounds(680, 415, 40, 40);

        lbFotoFundoCadastroPet.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fundoCadasroPet.png"))); // NOI18N
        panelPet.add(lbFotoFundoCadastroPet);
        lbFotoFundoCadastroPet.setBounds(0, 0, 862, 490);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelPet, javax.swing.GroupLayout.PREFERRED_SIZE, 862, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelPet, javax.swing.GroupLayout.DEFAULT_SIZE, 490, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tfIdadeAnoPetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfIdadeAnoPetActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfIdadeAnoPetActionPerformed

    private void btVoltarPetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btVoltarPetActionPerformed
        dispose();
    }//GEN-LAST:event_btVoltarPetActionPerformed

    private void btSalvarPetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSalvarPetActionPerformed
        
        pet.setNome(tfNomePet.getText());
        pet.setIdade(Integer.parseInt(tfIdadeAnoPet.getText()));
            try {
                pet.setNascimento (formato.parse(ftfNascimentoPet.getText()));
            } catch (ParseException ex) {
                Logger.getLogger(FramePet.class.getName()).log(Level.SEVERE, null, ex);
            }
        pet.setEspecie(rbCanino.isSelected()?"Canino":"Felino");
        pet.setRaca(tfRacaPet.getText());
        pet.setCor(tfCorPet.getText());
        pet.setPeso(Float.parseFloat(tfPeso.getText()));
        pet.setSexo(rbMacho.isSelected()?"Macho":"Femea");
        pet.setCastrado(rbCastradoSim.isSelected()?"Sim":"Não");
        pet.setVermi1(chk1Vermifungo.isSelected());
        pet.setVermi2(chk2Vermifungo.isSelected());
        pet.setRaiva(chkRaiva.isSelected());
        pet.setV101(chk1V10.isSelected());
        pet.setV102(chk2V10.isSelected());
        pet.setV103(chk3V10.isSelected());
        pet.setGiardia1(chk1Giardia.isSelected());
        pet.setGiardia2(chk2Giardia.isSelected());
        pet.setGripe(chkGripe.isSelected());
        pet.setMes(Integer.parseInt(tfIdadeMesPet.getText()));
        
            try {
                salvarPet(pet);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(FramePet.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(FramePet.class.getName()).log(Level.SEVERE, null, ex);
            }
        
    }//GEN-LAST:event_btSalvarPetActionPerformed

    private void btBuscarPetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btBuscarPetActionPerformed
            try {
                buscarPetNome();
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(FramePet.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(FramePet.class.getName()).log(Level.SEVERE, null, ex);
            }
        //bloquearCampos();
    }//GEN-LAST:event_btBuscarPetActionPerformed

    private void btExcluirPetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExcluirPetActionPerformed
            try {
                excluirPet();
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(FramePet.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(FramePet.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_btExcluirPetActionPerformed

    private void btEditarPetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEditarPetActionPerformed
         pet.setNome(tfNomePet.getText());
        pet.setIdade(Integer.parseInt(tfIdadeAnoPet.getText()));
            try {
                pet.setNascimento (formato.parse(ftfNascimentoPet.getText()));
            } catch (ParseException ex) {
                Logger.getLogger(FramePet.class.getName()).log(Level.SEVERE, null, ex);
            }
        pet.setEspecie(rbCanino.isSelected()?"Canino":"Felino");
        pet.setRaca(tfRacaPet.getText());
        pet.setCor(tfCorPet.getText());
        pet.setPeso(Float.parseFloat(tfPeso.getText()));
        pet.setSexo(rbMacho.isSelected()?"Macho":"Femea");
        pet.setCastrado(rbCastradoSim.isSelected()?"Sim":"Não");
        pet.setVermi1(chk1Vermifungo.isSelected());
        pet.setVermi2(chk2Vermifungo.isSelected());
        pet.setRaiva(chkRaiva.isSelected());
        pet.setV101(chk1V10.isSelected());
        pet.setV102(chk2V10.isSelected());
        pet.setV103(chk3V10.isSelected());
        pet.setGiardia1(chk1Giardia.isSelected());
        pet.setGiardia2(chk2Giardia.isSelected());
        pet.setGripe(chkGripe.isSelected());
        pet.setMes(Integer.parseInt(tfIdadeMesPet.getText()));
        
            try {
                editarPet(pet);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(FramePet.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(FramePet.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_btEditarPetActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FramePet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FramePet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FramePet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FramePet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FramePet().setVisible(true);
            }
        });
    }
    
     //Método para estabelecer conexão com o BD Derby
    
    public Connection getConnection() throws ClassNotFoundException, SQLException{
        String driveJDBC = "org.apache.derby.jdbc.Driver42";
        String url = "jdbc:derby://localhost:1527/LovePetP1";
        String usuario = "Adilson";
        String senha = "chacal";
        
        Connection connection;
        Class.forName(driveJDBC);
        connection = (Connection) DriverManager.getConnection(url, usuario, senha);
        return connection;
    }
    
    //Metodo para Salvar dados do Pet no banco
    public void salvarPet(Pet pet) throws ClassNotFoundException, SQLException{
        Connection connection = getConnection();
        Statement stmt;
        stmt = connection.createStatement();
        
        String nome = pet.getNome();
        int idade = pet.getIdade();
        String nascimento = formato.format(pet.getNascimento());
        String especie = pet.getEspecie();
        String raca = pet.getRaca();
        String cor = pet.getCor();
        float peso = pet.getPeso();
        String sexo = pet.getSexo();
        String castrado = pet.getCastrado();
        boolean verme1 = pet.isVermi1();
        boolean verme2 = pet.isVermi2();
        boolean raiva = pet.isRaiva();
        boolean v101 = pet.isV101();
        boolean v102 = pet.isV102();
        boolean v103 = pet.isV103();
        boolean giardia1 = pet.isGiardia1();
        boolean giardia2 = pet.isGiardia2();
        boolean gripe = pet.isGripe();
        int mes = pet.getMes();
        
        String sql = "INSERT INTO pet (nomepet, idade, nascimentopet, especie, raca,"
                +"cor, peso, sexo, castrado, verme1, verme2, raiva, v101, v102, v103,"
                +"giardia1, giardia2, gripe, idademes) VALUES ('"+nome+"',"+idade+",'"+nascimento
                +"','"+especie+"','"+raca+"','"+cor+"',"+peso+",'"+sexo+"','"+castrado
                +"',"+verme1+","+verme2+","+raiva+","+v101+","+v102+","+v103+","+giardia1
                +","+giardia2+","+gripe+","+mes+")";
        
        stmt.executeUpdate(sql);
        
        JOptionPane.showMessageDialog(null,"Dados salvo com sucesso!!!");
        
        limparCampos();
    }
    
    //Metodo para fazer busca de um pet no banco de dados
    public void buscarPetNome() throws ClassNotFoundException, SQLException{
        Connection connection;
        connection = getConnection();
        Statement stmt;
        ResultSet rs;
        
        stmt = connection.createStatement();
        
        String sql;
        sql = "Select * from pet Where (nomepet Like Trim('%"+tfNomePet.getText()+"%'))";
        rs = stmt.executeQuery(sql);
        rs.next();
        
        tfNomePet.setText(rs.getString(1));        
        tfIdadeAnoPet.setText(String.valueOf(rs.getInt(2)));
        ftfNascimentoPet.setText(rs.getString(3));        
        rbCanino.setSelected(rs.getString(4).equals("Canino"));        
        rbFelino.setSelected(rs.getString(4).equals("Felino"));        
        tfRacaPet.setText(rs.getString(5));        
        tfCorPet.setText(rs.getString(6));
        tfPeso.setText(String.valueOf(rs.getFloat(7)));        
        rbMacho.setSelected(rs.getString(8).equals("Macho"));        
        rbFemea.setSelected(rs.getString(8).equals("Femea"));        
        rbCastradoSim.setSelected(rs.getString(9).equals("Sim"));        
        rbCastradoNao.setSelected(rs.getString(9).equals("Não"));        
        chk1Vermifungo.setSelected(rs.getBoolean(10));        
        chk2Vermifungo.setSelected(rs.getBoolean(11));        
        chkRaiva.setSelected(rs.getBoolean(12));        
        chk1V10.setSelected(rs.getBoolean(13));        
        chk2V10.setSelected(rs.getBoolean(14));        
        chk3V10.setSelected(rs.getBoolean(15));        
        chk1Giardia.setSelected(rs.getBoolean(16));        
        chk2Giardia.setSelected(rs.getBoolean(17));        
        chkGripe.setSelected(rs.getBoolean(18));  
        tfIdadeMesPet.setText(String.valueOf(rs.getInt(19)));        
    }
    
    public void editarPet(Pet pet) throws ClassNotFoundException, SQLException{
        Connection connection = getConnection();
        Statement stmt;
        stmt = connection.createStatement();
        
        String nome = pet.getNome();
        int idade = pet.getIdade();
        String nascimento = formato.format(pet.getNascimento());
        String especie = pet.getEspecie();
        String raca = pet.getRaca();
        String cor = pet.getCor();
        float peso = pet.getPeso();
        String sexo = pet.getSexo();
        String castrado = pet.getCastrado();
        boolean verme1 = pet.isVermi1();
        boolean verme2 = pet.isVermi2();
        boolean raiva = pet.isRaiva();
        boolean v101 = pet.isV101();
        boolean v102 = pet.isV102();
        boolean v103 = pet.isV103();
        boolean giardia1 = pet.isGiardia1();
        boolean giardia2 = pet.isGiardia2();
        boolean gripe = pet.isGripe();
        int mes = pet.getMes();
        
        String sql = "UPDATE pet SET nomepet='"+nome+"', idade="+idade+", nascimentopet='"
                +nascimento+"', especie='"+especie+"', raca='"+raca+"',"+"cor='"+cor
                +"', peso="+peso+", sexo='"+sexo+"', castrado='"+castrado+"', verme1="
                +verme1+", verme2="+verme2+", raiva="+raiva+", v101="+v101+", v102="
                +v102+", v103="+v103+","+"giardia1="+giardia1+", giardia2="+giardia2
                +", gripe="+gripe+", idademes="+mes+" WHERE nomepet = '"+tfNomePet.getText()+"'";
              
        stmt.executeUpdate(sql);
        
        JOptionPane.showMessageDialog(null,"Dados editados com sucesso!!!");
        
        limparCampos();    
    
    }
    
    //Metodo para excluir fisicamente o Pet do banco de dados
    public void excluirPet() throws ClassNotFoundException, SQLException{
        Connection connection;
         connection = getConnection();
         Statement stmt;
         
         stmt = connection.createStatement();
         
         String sql;
         sql = "Delete from pet Where (nomepet = '"+tfNomePet.getText()+"')";
         stmt.executeUpdate(sql);
        
         JOptionPane.showMessageDialog(null, "DADOS DO PET EXCLUÍDO COM SUCESSO!!!", "CONFIRMAÇÃO DE EXCLUSÃO", HEIGHT);
    }
    
    //Metodo para bloquear os campos do frame
    public void bloquearCampos(){
        tfNomePet.setEditable(false);
        tfIdadeAnoPet.setEditable(false);
        ftfNascimentoPet.setEditable(false);
        rbCanino.setEnabled(false);
        rbFelino.setEnabled(false);
        tfRacaPet.setEditable(false);
        tfCorPet.setEditable(false);
        tfPeso.setEditable(false);
        rbMacho.setEnabled(false);
        rbFemea.setEnabled(false);
        rbCastradoSim.setEnabled(false);
        rbCastradoNao.setEnabled(false);
        chk1Vermifungo.setEnabled(false);
        chk2Vermifungo.setEnabled(false);
        chkRaiva.setEnabled(false);
        chk1V10.setEnabled(false);
        chk2V10.setEnabled(false);
        chk3V10.setEnabled(false);
        chk1Giardia.setEnabled(false);
        chk2Giardia.setEnabled(false);
        chkGripe.setEnabled(false);
        tfIdadeMesPet.setEditable(false);
    }
    
    //Metodo para desbloquear os campos do frame
    public void desbloquearCampos(){
        tfNomePet.setEditable(true);
        tfIdadeAnoPet.setEditable(true);
        ftfNascimentoPet.setEditable(true);
        rbCanino.setEnabled(true);
        rbFelino.setEnabled(true);
        tfRacaPet.setEditable(true);
        tfCorPet.setEditable(true);
        tfPeso.setEditable(true);
        rbMacho.setEnabled(true);
        rbFemea.setEnabled(true);
        rbCastradoSim.setEnabled(true);
        rbCastradoNao.setEnabled(true);
        chk1Vermifungo.setEnabled(true);
        chk2Vermifungo.setEnabled(true);
        chkRaiva.setEnabled(true);
        chk1V10.setEnabled(true);
        chk2V10.setEnabled(true);
        chk3V10.setEnabled(true);
        chk1Giardia.setEnabled(true);
        chk2Giardia.setEnabled(true);
        chkGripe.setEnabled(true);
        tfIdadeMesPet.setEditable(true);
    }
    
    //Metodo para limnpar os campos do frame
    public void limparCampos(){
        tfNomePet.setText("");        
        tfIdadeAnoPet.setText("");
        ftfNascimentoPet.setText("");        
        gbEspeciePet.clearSelection();
        tfRacaPet.setText("");        
        tfCorPet.setText("");
        tfPeso.setText("");        
        gbSexo.clearSelection();
        gbCastrado.clearSelection();
        chk1Vermifungo.setSelected(false);        
        chk2Vermifungo.setSelected(false); 
        chkRaiva.setSelected(false);
        chk1V10.setSelected(false);        
        chk2V10.setSelected(false);        
        chk3V10.setSelected(false);        
        chk1Giardia.setSelected(false);        
        chk2Giardia.setSelected(false);        
        chkGripe.setSelected(false);
        tfIdadeMesPet.setText("");
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btBuscarPet;
    private javax.swing.JButton btEditarPet;
    private javax.swing.JButton btExcluirPet;
    private javax.swing.JButton btSalvarPet;
    private javax.swing.JButton btVoltarPet;
    private javax.swing.JCheckBox chk1Giardia;
    private javax.swing.JCheckBox chk1V10;
    private javax.swing.JCheckBox chk1Vermifungo;
    private javax.swing.JCheckBox chk2Giardia;
    private javax.swing.JCheckBox chk2V10;
    private javax.swing.JCheckBox chk2Vermifungo;
    private javax.swing.JCheckBox chk3V10;
    private javax.swing.JCheckBox chkGripe;
    private javax.swing.JCheckBox chkRaiva;
    private javax.swing.JFormattedTextField ftfNascimentoPet;
    private javax.swing.ButtonGroup gbCastrado;
    private javax.swing.ButtonGroup gbEspeciePet;
    private javax.swing.ButtonGroup gbSexo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lbAno;
    private javax.swing.JLabel lbCastrado;
    private javax.swing.JLabel lbCorPet;
    private javax.swing.JLabel lbEditarPet;
    private javax.swing.JLabel lbExcluirPet;
    private javax.swing.JLabel lbFotoFundoCadastroPet;
    private javax.swing.JLabel lbIdade;
    private javax.swing.JLabel lbMeses;
    private javax.swing.JLabel lbNascimentoPet;
    private javax.swing.JLabel lbNomeAnimal;
    private javax.swing.JLabel lbPeso;
    private javax.swing.JLabel lbRacaPet;
    private javax.swing.JLabel lbSalvarPet;
    private javax.swing.JLabel lbSexopet;
    private javax.swing.JLabel lbTituloVacina;
    private javax.swing.JLabel lbVoltar;
    private javax.swing.JLabel lbtituloFrame;
    private javax.swing.JPanel panelPet;
    private javax.swing.JRadioButton rbCanino;
    private javax.swing.JRadioButton rbCastradoNao;
    private javax.swing.JRadioButton rbCastradoSim;
    private javax.swing.JRadioButton rbFelino;
    private javax.swing.JRadioButton rbFemea;
    private javax.swing.JRadioButton rbMacho;
    private javax.swing.JTextField tfCorPet;
    private javax.swing.JTextField tfIdadeAnoPet;
    private javax.swing.JTextField tfIdadeMesPet;
    private javax.swing.JTextField tfNomePet;
    private javax.swing.JTextField tfPeso;
    private javax.swing.JTextField tfRacaPet;
    // End of variables declaration//GEN-END:variables

    public void setIcon() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("petIcon2.png")));
    }
}
